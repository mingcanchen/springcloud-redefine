# Spring cloud config

# Eureka config
eureka.client.serviceUrl.defaultZone=http://localhost:8888/eureka/
eureka.instance.preferIpAddress=true

# Consul config
#spring.cloud.consul.host=localhost
#spring.cloud.consul.port=8500
#spring.cloud.consul.discovery.preferIpAddress=true

# Zookeeper config
#spring.cloud.zookeeper.connectString=localhost:2181
#spring.cloud.zookeeper.discovery.root=/spring-cloud-service
#spring.cloud.zookeeper.discovery.preferIpAddress=true

# Ribbon config
ribbon.ReadTimeout=60000
ribbon.ConnectTimeout=60000

# Nacos config
#nacos.url=localhost:8080
#nacos.timout=30000

# Redis config
#spring.redis.host=localhost
#spring.redis.port=6379
#spring.redis.password=
#spring.redis.database=0
#spring.redis.pool.max-active=8
#spring.redis.pool.max-wait=-1
#spring.redis.pool.max-idle=8
#spring.redis.pool.min-idle=0

# Admin config（management.health.consul.enabled必须配置在bootstrap.properties里，配置在application.properties无效）
management.security.enabled=false
# management.health.consul.enabled=true

# Plugin config
# 开启和关闭服务注册层面的控制。一旦关闭，服务注册的黑/白名单过滤功能将失效，最大注册数的限制过滤功能将失效。缺失则默认为true
spring.application.register.control.enabled=true
# 开启和关闭服务发现层面的控制。一旦关闭，服务多版本调用的控制功能将失效，动态屏蔽指定IP地址的服务实例被发现的功能将失效。缺失则默认为true
spring.application.discovery.control.enabled=true
# 开启和关闭通过Rest方式对规则配置的控制和推送。一旦关闭，只能通过远程配置中心来控制和推送。缺失则默认为true
spring.application.config.rest.control.enabled=true
# 规则文件的格式，支持xml和json。缺失则默认为xml
spring.application.config.format=xml
# spring.application.config.format=json
# 本地规则文件的路径，支持两种方式：classpath:rule.xml（rule.json） - 规则文件放在resources目录下，便于打包进jar；file:rule.xml（rule.json） - 规则文件放在工程根目录下，放置在外部便于修改。缺失则默认为不装载本地规则
spring.application.config.path=classpath:rule.xml
# spring.application.config.path=classpath:rule.json
# 为微服务归类的Key，一般通过group字段来归类，例如eureka.instance.metadataMap.group=xxx-group或者eureka.instance.metadataMap.application=xxx-application。缺失则默认为group
# spring.application.group.key=group
# spring.application.group.key=application

# Plugin strategy config
# 开启和关闭用户自定义和编程灰度路由策略的控制，例如用户根据业务参数的不同，负载均衡到不同的服务器。缺失则默认为true
spring.application.strategy.control.enabled=true
# 用户自定义和编程灰度路由策略的时候，需要指定对业务Controller类的扫描路径，以便传递上下文对象。该项配置只对服务有效，对网关无效
spring.application.strategy.scan.packages=cn.springcloud.book.feign

# Swagger config
swagger.service.base.package=com.nepxion.discovery.plugin.admincenter.endpoint
swagger.service.description=Admin Center Restful APIs
swagger.service.version=1.0.0
swagger.service.license=Apache License 2.0
swagger.service.license.url=http://www.apache.org/licenses/LICENSE-2.0
swagger.service.contact.name=http://springcloud.cn
swagger.service.contact.url=http://springcloud.cn
swagger.service.contact.email=Software_King@qq.com